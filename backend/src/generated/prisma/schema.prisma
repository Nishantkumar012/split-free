// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(cuid())
  name            String
  email           String        @unique
  password        String
  groups          GroupMember[] @relation("UserGroups")
  expenses        Expense[]     @relation("PaidBy")
  splits          Split[]
  settlementsFrom Settlement[]  @relation("SettlementFrom")
  settlementsTo   Settlement[]  @relation("SettlementTo")
}

model Group {
  id          String        @id @default(cuid())
  name        String
  members     GroupMember[] @relation("GroupMembers")
  expenses    Expense[]
  settlements Settlement[]
  createdAt   DateTime      @default(now())
}

model GroupMember {
  id      String @id @default(cuid())
  userId  String
  groupId String
  role    String
  user    User   @relation("UserGroups", fields: [userId], references: [id])
  group   Group  @relation("GroupMembers", fields: [groupId], references: [id])
}

model Expense {
  id          String   @id @default(cuid())
  description String
  amount      Float
  paidById    String
  paidBy      User     @relation("PaidBy", fields: [paidById], references: [id])
  groupId     String
  group       Group    @relation(fields: [groupId], references: [id])
  splits      Split[]
  createdAt   DateTime @default(now())
}

model Split {
  id        String  @id @default(cuid())
  expenseId String
  userId    String
  share     Float
  expense   Expense @relation(fields: [expenseId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Settlement {
  id        String   @id @default(cuid())
  fromId    String
  toId      String
  amount    Float
  groupId   String
  group     Group    @relation(fields: [groupId], references: [id])
  from      User     @relation("SettlementFrom", fields: [fromId], references: [id])
  to        User     @relation("SettlementTo", fields: [toId], references: [id])
  createdAt DateTime @default(now())
}
